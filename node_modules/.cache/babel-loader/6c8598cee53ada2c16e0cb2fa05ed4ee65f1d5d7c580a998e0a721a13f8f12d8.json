{"ast":null,"code":"var _jsxFileName = \"/Users/anupshrestha/Desktop/Cursor/src/components/sections/Experience.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Section from '../ui/Section';\nimport Container from '../ui/Container';\nimport Heading from '../ui/Heading';\nimport Timeline from '../ui/Timeline';\nimport KpiMetric from '../ui/KpiMetric';\nimport CodeBlock from '../ui/CodeBlock';\nimport { theme } from '../../styles/theme';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExperienceWrapper = styled(Section)`\n  min-height: 100vh;\n  background: linear-gradient(180deg, ${theme.colors.backgroundAlt} 0%, #050505 100%);\n  position: relative;\n  overflow: hidden;\n  \n  /* Matrix-like background (subtle) */\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-image: \n      radial-gradient(${theme.colors.glassBorder} 1px, transparent 1px);\n    background-size: 30px 30px;\n    opacity: 0.1;\n    z-index: 0;\n  }\n`;\n_c = ExperienceWrapper;\nconst ExperienceContainer = styled(Container)`\n  position: relative;\n  z-index: 1;\n`;\n_c2 = ExperienceContainer;\nconst ExperienceContent = styled.div`\n  display: flex;\n  margin-top: ${theme.spacing.xl};\n  \n  @media (max-width: ${theme.breakpoints.md}) {\n    flex-direction: column;\n  }\n`;\n_c3 = ExperienceContent;\nconst TimelineContainer = styled.div`\n  flex: 0 0 300px;\n  \n  @media (max-width: ${theme.breakpoints.md}) {\n    flex: 1;\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n_c4 = TimelineContainer;\nconst DetailContainer = styled.div`\n  flex: 1;\n  animation: fadeIn 0.5s ease forwards;\n`;\n_c5 = DetailContainer;\nconst JobHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.glassBorder};\n  padding-bottom: ${theme.spacing.md};\n  display: flex;\n  flex-direction: column;\n`;\n_c6 = JobHeader;\nconst JobTitle = styled.h3`\n  font-size: ${theme.typography.sizes.title1};\n  margin-bottom: ${theme.spacing.sm};\n  background: ${theme.colors.gradientPrimary};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n`;\n_c7 = JobTitle;\nconst JobDetails = styled.div`\n  font-size: ${theme.typography.sizes.body};\n  color: ${theme.colors.textSecondary};\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n`;\n_c8 = JobDetails;\nconst JobPeriod = styled.span`\n  background: rgba(255, 255, 255, 0.1);\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-family: 'Fira Code', monospace;\n  font-size: ${theme.typography.sizes.caption};\n`;\n_c9 = JobPeriod;\nconst JobLocation = styled.span`\n  display: flex;\n  align-items: center;\n  \n  &::before {\n    content: '';\n    display: inline-block;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: ${theme.colors.secondary};\n    margin-right: ${theme.spacing.xs};\n  }\n`;\n_c0 = JobLocation;\nconst KpiMetricsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n_c1 = KpiMetricsContainer;\nconst TechnologiesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.xl};\n`;\n_c10 = TechnologiesList;\nconst Technology = styled.span`\n  background: ${theme.colors.glass};\n  border: 1px solid ${theme.colors.glassBorder};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: ${theme.typography.sizes.caption};\n  color: ${theme.colors.textSecondary};\n  backdrop-filter: blur(5px);\n  \n  &::before {\n    content: '#';\n    color: ${theme.colors.primary};\n    margin-right: 2px;\n  }\n`;\n_c11 = Technology;\nconst ResponsibilitiesHeader = styled.h4`\n  font-size: ${theme.typography.sizes.title3};\n  margin-top: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.textSecondary};\n  display: flex;\n  align-items: center;\n  \n  &::before {\n    content: '//';\n    color: ${theme.colors.secondary};\n    margin-right: ${theme.spacing.sm};\n    font-family: 'Fira Code', monospace;\n  }\n`;\n\n// Achievement code samples\n_c12 = ResponsibilitiesHeader;\nconst generateAchievementCode = (achievement, language) => {\n  switch (language) {\n    case 'javascript':\n      return `/**\n * Key Achievement\n */\nconst achievement = {\n  impact: \\`${achievement}\\`,\n  metrics: calculateImpact(),\n  date: new Date().toISOString()\n};\n\nfunction calculateImpact() {\n  // Analysis shows significant improvements\n  return {\n    businessValue: 'High',\n    userSatisfaction: '95%',\n    teamEfficiency: 'Increased by 40%'\n  };\n}\n\n// Output the achievement for management review\nconsole.log(\\`Achievement unlocked: \\${achievement.impact}\\`);`;\n    case 'typescript':\n      return `/**\n * Key Achievement \n */\ninterface Impact {\n  businessValue: string;\n  userSatisfaction: string;\n  teamEfficiency: string;\n}\n\nclass Achievement {\n  private readonly _impact: string;\n  private readonly _date: Date;\n  private _metrics?: Impact;\n\n  constructor(impact: string) {\n    this._impact = impact;\n    this._date = new Date();\n  }\n\n  public calculateMetrics(): Impact {\n    // Analysis shows significant improvements\n    return {\n      businessValue: 'High',\n      userSatisfaction: '95%',\n      teamEfficiency: 'Increased by 40%'\n    };\n  }\n\n  public logAchievement(): void {\n    console.log(\\`Achievement unlocked: \\${this._impact}\\`);\n  }\n}\n\n// Document the achievement\nconst keyResult = new Achievement(\\`${achievement}\\`);\nkeyResult.logAchievement();`;\n    case 'python':\n      return `# Key Achievement\n\nclass Achievement:\n    \"\"\"Represents a significant professional accomplishment.\"\"\"\n    \n    def __init__(self, impact: str):\n        self.impact = impact\n        self.date = \"Current\"\n        self.metrics = self.calculate_metrics()\n    \n    def calculate_metrics(self):\n        # Analysis shows significant improvements\n        return {\n            \"business_value\": \"High\",\n            \"user_satisfaction\": \"95%\",\n            \"team_efficiency\": \"Increased by 40%\"\n        }\n    \n    def __str__(self):\n        return f\"Achievement unlocked: {self.impact}\"\n\n\n# Document the achievement\nkey_result = Achievement(\"${achievement}\")\nprint(key_result)`;\n  }\n};\nconst Experience = ({\n  experience\n}) => {\n  _s();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [selectedJob, setSelectedJob] = useState(experience[0]);\n  const [codeLanguage, setCodeLanguage] = useState('typescript');\n\n  // Change code language every 10 seconds to show different implementations\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCodeLanguage(prev => {\n        if (prev === 'javascript') return 'typescript';\n        if (prev === 'typescript') return 'python';\n        return 'javascript';\n      });\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    setSelectedJob(experience[activeIndex]);\n  }, [activeIndex, experience]);\n\n  // Map achievement to KPI metrics\n  const getKpiMetricsFromAchievements = job => {\n    if (!job.achievements || job.achievements.length === 0) return [];\n\n    // KPI mapping (can be extended based on the text content)\n    const kpiData = job.achievements.map((achievement, index) => {\n      // Simple keyword-based analysis for mock metrics\n      const text = achievement.toLowerCase();\n      const metrics = [{\n        value: text.includes('40%') ? '40%' : text.includes('reduced') ? '25%' : text.includes('15') ? '15K' : '65%',\n        label: text.includes('time') ? 'Time Reduction' : text.includes('users') ? 'Users Gained' : text.includes('conversion') ? 'Conversion Rate Increase' : text.includes('churn') ? 'Churn Reduction' : 'Efficiency Increase',\n        icon: text.includes('time') ? 'clock' : text.includes('users') ? 'users' : text.includes('customer') ? 'users' : text.includes('framework') ? 'lightbulb' : 'trending',\n        accentColor: index === 0 ? theme.colors.primary : index === 1 ? theme.colors.secondary : theme.colors.tertiary\n      }];\n      return metrics[0];\n    });\n    return kpiData;\n  };\n\n  // Get the most impressive achievement for code display\n  const getKeyAchievement = job => {\n    if (!job.achievements || job.achievements.length === 0) return '';\n\n    // Simple heuristic - get achievement with most impressive numbers\n    const achievement = job.achievements.find(a => a.includes('400') || a.includes('40%') || a.includes('15K')) || job.achievements[0];\n    return achievement;\n  };\n  const kpiMetrics = getKpiMetricsFromAchievements(selectedJob);\n  const keyAchievement = getKeyAchievement(selectedJob);\n  const achievementCode = generateAchievementCode(keyAchievement, codeLanguage);\n  return /*#__PURE__*/_jsxDEV(ExperienceWrapper, {\n    id: \"experience\",\n    children: /*#__PURE__*/_jsxDEV(ExperienceContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        level: 2,\n        size: \"headline\",\n        align: \"center\",\n        marginBottom: \"large\",\n        children: \"Professional Journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExperienceContent, {\n        children: [/*#__PURE__*/_jsxDEV(TimelineContainer, {\n          children: /*#__PURE__*/_jsxDEV(Timeline, {\n            items: experience,\n            activeIndex: activeIndex,\n            setActiveIndex: setActiveIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailContainer, {\n          children: [/*#__PURE__*/_jsxDEV(JobHeader, {\n            children: [/*#__PURE__*/_jsxDEV(JobTitle, {\n              children: selectedJob.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(JobDetails, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: selectedJob.company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(JobLocation, {\n                children: selectedJob.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(JobPeriod, {\n                children: selectedJob.period\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), kpiMetrics.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ResponsibilitiesHeader, {\n              children: \"Key Performance Indicators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(KpiMetricsContainer, {\n              children: kpiMetrics.map((metric, index) => /*#__PURE__*/_jsxDEV(KpiMetric, {\n                value: metric.value,\n                label: metric.label,\n                icon: metric.icon,\n                accentColor: metric.accentColor,\n                delay: index * 0.2\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(ResponsibilitiesHeader, {\n            children: \"Achievement Spotlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n            code: achievementCode,\n            language: codeLanguage,\n            title: `achievement.${codeLanguage === 'python' ? 'py' : codeLanguage === 'typescript' ? 'ts' : 'js'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), selectedJob.technologies && selectedJob.technologies.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ResponsibilitiesHeader, {\n              children: \"Technologies Used\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TechnologiesList, {\n              children: selectedJob.technologies.map((tech, index) => /*#__PURE__*/_jsxDEV(Technology, {\n                children: tech\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(Experience, \"6o+JCzu5fA7wa/LaiAVaBm43LU4=\");\n_c13 = Experience;\nexport default Experience;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"ExperienceWrapper\");\n$RefreshReg$(_c2, \"ExperienceContainer\");\n$RefreshReg$(_c3, \"ExperienceContent\");\n$RefreshReg$(_c4, \"TimelineContainer\");\n$RefreshReg$(_c5, \"DetailContainer\");\n$RefreshReg$(_c6, \"JobHeader\");\n$RefreshReg$(_c7, \"JobTitle\");\n$RefreshReg$(_c8, \"JobDetails\");\n$RefreshReg$(_c9, \"JobPeriod\");\n$RefreshReg$(_c0, \"JobLocation\");\n$RefreshReg$(_c1, \"KpiMetricsContainer\");\n$RefreshReg$(_c10, \"TechnologiesList\");\n$RefreshReg$(_c11, \"Technology\");\n$RefreshReg$(_c12, \"ResponsibilitiesHeader\");\n$RefreshReg$(_c13, \"Experience\");","map":{"version":3,"names":["React","useState","useEffect","styled","Section","Container","Heading","Timeline","KpiMetric","CodeBlock","theme","jsxDEV","_jsxDEV","Fragment","_Fragment","ExperienceWrapper","colors","backgroundAlt","glassBorder","_c","ExperienceContainer","_c2","ExperienceContent","div","spacing","xl","breakpoints","md","_c3","TimelineContainer","_c4","DetailContainer","_c5","JobHeader","_c6","JobTitle","h3","typography","sizes","title1","sm","gradientPrimary","_c7","JobDetails","body","textSecondary","_c8","JobPeriod","span","xs","borderRadius","caption","_c9","JobLocation","secondary","_c0","KpiMetricsContainer","lg","_c1","TechnologiesList","_c10","Technology","glass","primary","_c11","ResponsibilitiesHeader","h4","title3","_c12","generateAchievementCode","achievement","language","Experience","experience","_s","activeIndex","setActiveIndex","selectedJob","setSelectedJob","codeLanguage","setCodeLanguage","interval","setInterval","prev","clearInterval","getKpiMetricsFromAchievements","job","achievements","length","kpiData","map","index","text","toLowerCase","metrics","value","includes","label","icon","accentColor","tertiary","getKeyAchievement","find","a","kpiMetrics","keyAchievement","achievementCode","id","children","level","size","align","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","items","title","company","location","period","metric","delay","code","technologies","tech","_c13","$RefreshReg$"],"sources":["/Users/anupshrestha/Desktop/Cursor/src/components/sections/Experience.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { WorkExperience } from '../../types';\nimport Section from '../ui/Section';\nimport Container from '../ui/Container';\nimport Heading from '../ui/Heading';\nimport Timeline from '../ui/Timeline';\nimport KpiMetric from '../ui/KpiMetric';\nimport CodeBlock from '../ui/CodeBlock';\nimport { theme } from '../../styles/theme';\n\ninterface ExperienceProps {\n  experience: WorkExperience[];\n}\n\nconst ExperienceWrapper = styled(Section)`\n  min-height: 100vh;\n  background: linear-gradient(180deg, ${theme.colors.backgroundAlt} 0%, #050505 100%);\n  position: relative;\n  overflow: hidden;\n  \n  /* Matrix-like background (subtle) */\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-image: \n      radial-gradient(${theme.colors.glassBorder} 1px, transparent 1px);\n    background-size: 30px 30px;\n    opacity: 0.1;\n    z-index: 0;\n  }\n`;\n\nconst ExperienceContainer = styled(Container)`\n  position: relative;\n  z-index: 1;\n`;\n\nconst ExperienceContent = styled.div`\n  display: flex;\n  margin-top: ${theme.spacing.xl};\n  \n  @media (max-width: ${theme.breakpoints.md}) {\n    flex-direction: column;\n  }\n`;\n\nconst TimelineContainer = styled.div`\n  flex: 0 0 300px;\n  \n  @media (max-width: ${theme.breakpoints.md}) {\n    flex: 1;\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n\nconst DetailContainer = styled.div`\n  flex: 1;\n  animation: fadeIn 0.5s ease forwards;\n`;\n\nconst JobHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.glassBorder};\n  padding-bottom: ${theme.spacing.md};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst JobTitle = styled.h3`\n  font-size: ${theme.typography.sizes.title1};\n  margin-bottom: ${theme.spacing.sm};\n  background: ${theme.colors.gradientPrimary};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n`;\n\nconst JobDetails = styled.div`\n  font-size: ${theme.typography.sizes.body};\n  color: ${theme.colors.textSecondary};\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n`;\n\nconst JobPeriod = styled.span`\n  background: rgba(255, 255, 255, 0.1);\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-family: 'Fira Code', monospace;\n  font-size: ${theme.typography.sizes.caption};\n`;\n\nconst JobLocation = styled.span`\n  display: flex;\n  align-items: center;\n  \n  &::before {\n    content: '';\n    display: inline-block;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: ${theme.colors.secondary};\n    margin-right: ${theme.spacing.xs};\n  }\n`;\n\nconst KpiMetricsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst TechnologiesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.xl};\n`;\n\nconst Technology = styled.span`\n  background: ${theme.colors.glass};\n  border: 1px solid ${theme.colors.glassBorder};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: ${theme.typography.sizes.caption};\n  color: ${theme.colors.textSecondary};\n  backdrop-filter: blur(5px);\n  \n  &::before {\n    content: '#';\n    color: ${theme.colors.primary};\n    margin-right: 2px;\n  }\n`;\n\nconst ResponsibilitiesHeader = styled.h4`\n  font-size: ${theme.typography.sizes.title3};\n  margin-top: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.textSecondary};\n  display: flex;\n  align-items: center;\n  \n  &::before {\n    content: '//';\n    color: ${theme.colors.secondary};\n    margin-right: ${theme.spacing.sm};\n    font-family: 'Fira Code', monospace;\n  }\n`;\n\n// Achievement code samples\nconst generateAchievementCode = (achievement: string, language: 'javascript' | 'typescript' | 'python') => {\n  switch (language) {\n    case 'javascript':\n      return `/**\n * Key Achievement\n */\nconst achievement = {\n  impact: \\`${achievement}\\`,\n  metrics: calculateImpact(),\n  date: new Date().toISOString()\n};\n\nfunction calculateImpact() {\n  // Analysis shows significant improvements\n  return {\n    businessValue: 'High',\n    userSatisfaction: '95%',\n    teamEfficiency: 'Increased by 40%'\n  };\n}\n\n// Output the achievement for management review\nconsole.log(\\`Achievement unlocked: \\${achievement.impact}\\`);`;\n      \n    case 'typescript':\n      return `/**\n * Key Achievement \n */\ninterface Impact {\n  businessValue: string;\n  userSatisfaction: string;\n  teamEfficiency: string;\n}\n\nclass Achievement {\n  private readonly _impact: string;\n  private readonly _date: Date;\n  private _metrics?: Impact;\n\n  constructor(impact: string) {\n    this._impact = impact;\n    this._date = new Date();\n  }\n\n  public calculateMetrics(): Impact {\n    // Analysis shows significant improvements\n    return {\n      businessValue: 'High',\n      userSatisfaction: '95%',\n      teamEfficiency: 'Increased by 40%'\n    };\n  }\n\n  public logAchievement(): void {\n    console.log(\\`Achievement unlocked: \\${this._impact}\\`);\n  }\n}\n\n// Document the achievement\nconst keyResult = new Achievement(\\`${achievement}\\`);\nkeyResult.logAchievement();`;\n    \n    case 'python':\n      return `# Key Achievement\n\nclass Achievement:\n    \"\"\"Represents a significant professional accomplishment.\"\"\"\n    \n    def __init__(self, impact: str):\n        self.impact = impact\n        self.date = \"Current\"\n        self.metrics = self.calculate_metrics()\n    \n    def calculate_metrics(self):\n        # Analysis shows significant improvements\n        return {\n            \"business_value\": \"High\",\n            \"user_satisfaction\": \"95%\",\n            \"team_efficiency\": \"Increased by 40%\"\n        }\n    \n    def __str__(self):\n        return f\"Achievement unlocked: {self.impact}\"\n\n\n# Document the achievement\nkey_result = Achievement(\"${achievement}\")\nprint(key_result)`;\n  }\n};\n\nconst Experience: React.FC<ExperienceProps> = ({ experience }: ExperienceProps) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [selectedJob, setSelectedJob] = useState<WorkExperience>(experience[0]);\n  const [codeLanguage, setCodeLanguage] = useState<'javascript' | 'typescript' | 'python'>('typescript');\n  \n  // Change code language every 10 seconds to show different implementations\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCodeLanguage(prev => {\n        if (prev === 'javascript') return 'typescript';\n        if (prev === 'typescript') return 'python';\n        return 'javascript';\n      });\n    }, 10000);\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  useEffect(() => {\n    setSelectedJob(experience[activeIndex]);\n  }, [activeIndex, experience]);\n  \n  // Map achievement to KPI metrics\n  const getKpiMetricsFromAchievements = (job: WorkExperience) => {\n    if (!job.achievements || job.achievements.length === 0) return [];\n    \n    // KPI mapping (can be extended based on the text content)\n    const kpiData = job.achievements.map((achievement, index) => {\n      // Simple keyword-based analysis for mock metrics\n      const text = achievement.toLowerCase();\n      \n      const metrics = [\n        {\n          value: text.includes('40%') ? '40%' : (text.includes('reduced') ? '25%' : (text.includes('15') ? '15K' : '65%')),\n          label: text.includes('time') ? 'Time Reduction' : (\n            text.includes('users') ? 'Users Gained' : (\n              text.includes('conversion') ? 'Conversion Rate Increase' : (\n                text.includes('churn') ? 'Churn Reduction' : 'Efficiency Increase'\n              )\n            )\n          ),\n          icon: text.includes('time') ? 'clock' : (\n            text.includes('users') ? 'users' : (\n              text.includes('customer') ? 'users' : (\n                text.includes('framework') ? 'lightbulb' : 'trending'\n              )\n            )\n          ),\n          accentColor: index === 0 ? theme.colors.primary : (\n            index === 1 ? theme.colors.secondary : theme.colors.tertiary\n          )\n        }\n      ];\n      \n      return metrics[0];\n    });\n    \n    return kpiData;\n  };\n  \n  // Get the most impressive achievement for code display\n  const getKeyAchievement = (job: WorkExperience) => {\n    if (!job.achievements || job.achievements.length === 0) return '';\n    \n    // Simple heuristic - get achievement with most impressive numbers\n    const achievement = job.achievements.find(a => \n      a.includes('400') || a.includes('40%') || a.includes('15K')\n    ) || job.achievements[0];\n    \n    return achievement;\n  };\n  \n  const kpiMetrics = getKpiMetricsFromAchievements(selectedJob);\n  const keyAchievement = getKeyAchievement(selectedJob);\n  const achievementCode = generateAchievementCode(keyAchievement, codeLanguage);\n  \n  return (\n    <ExperienceWrapper id=\"experience\">\n      <ExperienceContainer>\n        <Heading level={2} size=\"headline\" align=\"center\" marginBottom=\"large\">\n          Professional Journey\n        </Heading>\n        \n        <ExperienceContent>\n          <TimelineContainer>\n            <Timeline \n              items={experience} \n              activeIndex={activeIndex} \n              setActiveIndex={setActiveIndex} \n            />\n          </TimelineContainer>\n          \n          <DetailContainer>\n            <JobHeader>\n              <JobTitle>{selectedJob.title}</JobTitle>\n              <JobDetails>\n                <span>{selectedJob.company}</span>\n                <JobLocation>{selectedJob.location}</JobLocation>\n                <JobPeriod>{selectedJob.period}</JobPeriod>\n              </JobDetails>\n            </JobHeader>\n            \n            {kpiMetrics.length > 0 && (\n              <>\n                <ResponsibilitiesHeader>Key Performance Indicators</ResponsibilitiesHeader>\n                <KpiMetricsContainer>\n                  {kpiMetrics.map((metric, index) => (\n                    <KpiMetric \n                      key={index}\n                      value={metric.value}\n                      label={metric.label}\n                      icon={metric.icon}\n                      accentColor={metric.accentColor}\n                      delay={index * 0.2}\n                    />\n                  ))}\n                </KpiMetricsContainer>\n              </>\n            )}\n            \n            <ResponsibilitiesHeader>Achievement Spotlight</ResponsibilitiesHeader>\n            <CodeBlock \n              code={achievementCode} \n              language={codeLanguage}\n              title={`achievement.${codeLanguage === 'python' ? 'py' : codeLanguage === 'typescript' ? 'ts' : 'js'}`}\n            />\n            \n            {selectedJob.technologies && selectedJob.technologies.length > 0 && (\n              <>\n                <ResponsibilitiesHeader>Technologies Used</ResponsibilitiesHeader>\n                <TechnologiesList>\n                  {selectedJob.technologies.map((tech, index) => (\n                    <Technology key={index}>{tech}</Technology>\n                  ))}\n                </TechnologiesList>\n              </>\n            )}\n          </DetailContainer>\n        </ExperienceContent>\n      </ExperienceContainer>\n    </ExperienceWrapper>\n  );\n};\n\nexport default Experience; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}