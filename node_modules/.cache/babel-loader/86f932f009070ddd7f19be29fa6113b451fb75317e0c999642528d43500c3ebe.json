{"ast":null,"code":"var _jsxFileName = \"/Users/anupshrestha/Desktop/Cursor/src/components/sections/Experience.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Section from '../ui/Section';\nimport Container from '../ui/Container';\nimport Heading from '../ui/Heading';\nimport Timeline from '../ui/Timeline';\nimport KpiMetric from '../ui/KpiMetric';\nimport CodeBlock from '../ui/CodeBlock';\nimport { theme } from '../../styles/theme';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExperienceWrapper = styled(Section)`\n  min-height: 100vh;\n  background: linear-gradient(180deg, ${theme.colors.backgroundAlt} 0%, ${theme.colors.background} 100%);\n  position: relative;\n  overflow: hidden;\n`;\n_c = ExperienceWrapper;\nconst ExperienceContainer = styled(Container)`\n  position: relative;\n  z-index: 1;\n`;\n_c2 = ExperienceContainer;\nconst ExperienceContent = styled.div`\n  display: flex;\n  margin-top: ${theme.spacing.xl};\n  \n  @media (max-width: ${theme.breakpoints.md}) {\n    flex-direction: column;\n  }\n`;\n_c3 = ExperienceContent;\nconst TimelineContainer = styled.div`\n  flex: 0 0 300px;\n  \n  @media (max-width: ${theme.breakpoints.md}) {\n    flex: 1;\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n_c4 = TimelineContainer;\nconst DetailContainer = styled.div`\n  flex: 1;\n`;\n_c5 = DetailContainer;\nconst JobHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.glassBorder};\n  padding-bottom: ${theme.spacing.md};\n  display: flex;\n  flex-direction: column;\n`;\n_c6 = JobHeader;\nconst JobTitle = styled.h3`\n  font-size: ${theme.typography.sizes.title1};\n  margin-bottom: ${theme.spacing.sm};\n  background: ${theme.colors.gradientPrimary};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n`;\n_c7 = JobTitle;\nconst JobDetails = styled.div`\n  font-size: ${theme.typography.sizes.body};\n  color: ${theme.colors.textSecondary};\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n`;\n_c8 = JobDetails;\nconst JobPeriod = styled.span`\n  background: rgba(255, 255, 255, 0.1);\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-family: 'Fira Code', monospace;\n  font-size: ${theme.typography.sizes.caption};\n`;\n_c9 = JobPeriod;\nconst JobLocation = styled.span`\n  display: flex;\n  align-items: center;\n  \n  &::before {\n    content: '';\n    display: inline-block;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: ${theme.colors.secondary};\n    margin-right: ${theme.spacing.xs};\n  }\n`;\n_c0 = JobLocation;\nconst KpiMetricsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n_c1 = KpiMetricsContainer;\nconst TechnologiesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.xl};\n`;\n_c10 = TechnologiesList;\nconst Technology = styled.span`\n  background: ${theme.colors.glass};\n  border: 1px solid ${theme.colors.glassBorder};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: ${theme.typography.sizes.caption};\n  color: ${theme.colors.textSecondary};\n  backdrop-filter: blur(5px);\n  \n  &::before {\n    content: '#';\n    color: ${theme.colors.primary};\n    margin-right: 2px;\n  }\n`;\n_c11 = Technology;\nconst ResponsibilitiesHeader = styled.h4`\n  font-size: ${theme.typography.sizes.title3};\n  margin-top: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.textSecondary};\n  display: flex;\n  align-items: center;\n  \n  &::before {\n    content: '//';\n    color: ${theme.colors.secondary};\n    margin-right: ${theme.spacing.sm};\n    font-family: 'Fira Code', monospace;\n  }\n`;\n\n// Fixed achievement code - using TypeScript as it's more professional\n_c12 = ResponsibilitiesHeader;\nconst generateAchievementCode = achievement => {\n  return `/**\n * Key Achievement \n */\ninterface Impact {\n  businessValue: string;\n  userSatisfaction: string;\n  teamEfficiency: string;\n}\n\nclass Achievement {\n  private readonly _impact: string;\n  private readonly _date: Date;\n  private _metrics?: Impact;\n\n  constructor(impact: string) {\n    this._impact = impact;\n    this._date = new Date();\n  }\n\n  public calculateMetrics(): Impact {\n    // Analysis shows significant improvements\n    return {\n      businessValue: 'High',\n      userSatisfaction: '95%',\n      teamEfficiency: 'Increased by 40%'\n    };\n  }\n\n  public logAchievement(): void {\n    console.log(\\`Achievement unlocked: \\${this._impact}\\`);\n  }\n}\n\n// Document the achievement\nconst keyResult = new Achievement(\\`${achievement}\\`);\nkeyResult.logAchievement();`;\n};\nconst Experience = ({\n  experience\n}) => {\n  _s();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [selectedJob, setSelectedJob] = useState(experience[0]);\n  useEffect(() => {\n    setSelectedJob(experience[activeIndex]);\n  }, [activeIndex, experience]);\n\n  // Map achievement to KPI metrics with fixed icons and colors\n  const getKpiMetricsFromAchievements = job => {\n    if (!job.achievements || job.achievements.length === 0) return [];\n\n    // Define fixed KPI metrics with consistent naming and coloring\n    const kpiData = job.achievements.map((achievement, index) => {\n      const text = achievement.toLowerCase();\n\n      // Fixed KPI metric configurations\n      const metricTypes = [{\n        icon: 'clock',\n        label: 'Time Reduction',\n        accentColor: theme.colors.primary\n      }, {\n        icon: 'users',\n        label: 'User Growth',\n        accentColor: theme.colors.secondary\n      }, {\n        icon: 'chart',\n        label: 'Efficiency Increase',\n        accentColor: theme.colors.tertiary\n      }];\n\n      // Determine value from achievement text\n      let value = '40%';\n      if (text.includes('400%')) value = '400%';else if (text.includes('35%')) value = '35%';else if (text.includes('92%')) value = '92%';else if (text.includes('65%')) value = '65%';else if (text.includes('15K')) value = '15K';else if (text.includes('25%')) value = '25%';\n\n      // Use fixed metric type based on index (ensures consistency)\n      const metricType = metricTypes[index % metricTypes.length];\n      return {\n        value,\n        label: metricType.label,\n        icon: metricType.icon,\n        accentColor: metricType.accentColor\n      };\n    });\n    return kpiData.slice(0, 3); // Limit to 3 metrics for consistent display\n  };\n\n  // Get the most impressive achievement for code display\n  const getKeyAchievement = job => {\n    if (!job.achievements || job.achievements.length === 0) return '';\n\n    // Simple heuristic - get achievement with most impressive numbers\n    const achievement = job.achievements.find(a => a.includes('400') || a.includes('40%') || a.includes('15K')) || job.achievements[0];\n    return achievement;\n  };\n  const kpiMetrics = getKpiMetricsFromAchievements(selectedJob);\n  const keyAchievement = getKeyAchievement(selectedJob);\n  const achievementCode = generateAchievementCode(keyAchievement);\n  return /*#__PURE__*/_jsxDEV(ExperienceWrapper, {\n    id: \"experience\",\n    aiPattern: true,\n    children: /*#__PURE__*/_jsxDEV(ExperienceContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        level: 2,\n        size: \"headline\",\n        align: \"center\",\n        marginBottom: \"large\",\n        gradient: true,\n        withAccent: true,\n        children: \"Professional Journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExperienceContent, {\n        children: [/*#__PURE__*/_jsxDEV(TimelineContainer, {\n          children: /*#__PURE__*/_jsxDEV(Timeline, {\n            items: experience,\n            activeIndex: activeIndex,\n            setActiveIndex: setActiveIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailContainer, {\n          children: [/*#__PURE__*/_jsxDEV(JobHeader, {\n            children: [/*#__PURE__*/_jsxDEV(JobTitle, {\n              children: selectedJob.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(JobDetails, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: selectedJob.company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(JobLocation, {\n                children: selectedJob.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(JobPeriod, {\n                children: selectedJob.period\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), kpiMetrics.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ResponsibilitiesHeader, {\n              children: \"Key Performance Indicators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(KpiMetricsContainer, {\n              children: kpiMetrics.map((metric, index) => /*#__PURE__*/_jsxDEV(KpiMetric, {\n                value: metric.value,\n                label: metric.label,\n                icon: metric.icon,\n                accentColor: metric.accentColor,\n                delay: 0 // No delay for stability\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(ResponsibilitiesHeader, {\n            children: \"Achievement Spotlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CodeBlock, {\n            code: achievementCode,\n            language: \"typescript\",\n            title: \"achievement.ts\",\n            autoType: false // Disable auto-typing for stability\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), selectedJob.technologies && selectedJob.technologies.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ResponsibilitiesHeader, {\n              children: \"Technologies Used\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TechnologiesList, {\n              children: selectedJob.technologies.map((tech, index) => /*#__PURE__*/_jsxDEV(Technology, {\n                children: tech\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(Experience, \"K9dQw3bjNAmrObBNo1dVu+QbHFM=\");\n_c13 = Experience;\nexport default Experience;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"ExperienceWrapper\");\n$RefreshReg$(_c2, \"ExperienceContainer\");\n$RefreshReg$(_c3, \"ExperienceContent\");\n$RefreshReg$(_c4, \"TimelineContainer\");\n$RefreshReg$(_c5, \"DetailContainer\");\n$RefreshReg$(_c6, \"JobHeader\");\n$RefreshReg$(_c7, \"JobTitle\");\n$RefreshReg$(_c8, \"JobDetails\");\n$RefreshReg$(_c9, \"JobPeriod\");\n$RefreshReg$(_c0, \"JobLocation\");\n$RefreshReg$(_c1, \"KpiMetricsContainer\");\n$RefreshReg$(_c10, \"TechnologiesList\");\n$RefreshReg$(_c11, \"Technology\");\n$RefreshReg$(_c12, \"ResponsibilitiesHeader\");\n$RefreshReg$(_c13, \"Experience\");","map":{"version":3,"names":["React","useState","useEffect","styled","Section","Container","Heading","Timeline","KpiMetric","CodeBlock","theme","jsxDEV","_jsxDEV","Fragment","_Fragment","ExperienceWrapper","colors","backgroundAlt","background","_c","ExperienceContainer","_c2","ExperienceContent","div","spacing","xl","breakpoints","md","_c3","TimelineContainer","_c4","DetailContainer","_c5","JobHeader","glassBorder","_c6","JobTitle","h3","typography","sizes","title1","sm","gradientPrimary","_c7","JobDetails","body","textSecondary","_c8","JobPeriod","span","xs","borderRadius","caption","_c9","JobLocation","secondary","_c0","KpiMetricsContainer","lg","_c1","TechnologiesList","_c10","Technology","glass","primary","_c11","ResponsibilitiesHeader","h4","title3","_c12","generateAchievementCode","achievement","Experience","experience","_s","activeIndex","setActiveIndex","selectedJob","setSelectedJob","getKpiMetricsFromAchievements","job","achievements","length","kpiData","map","index","text","toLowerCase","metricTypes","icon","label","accentColor","tertiary","value","includes","metricType","slice","getKeyAchievement","find","a","kpiMetrics","keyAchievement","achievementCode","id","aiPattern","children","level","size","align","marginBottom","gradient","withAccent","fileName","_jsxFileName","lineNumber","columnNumber","items","title","company","location","period","metric","delay","code","language","autoType","technologies","tech","_c13","$RefreshReg$"],"sources":["/Users/anupshrestha/Desktop/Cursor/src/components/sections/Experience.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { WorkExperience } from '../../types';\nimport Section from '../ui/Section';\nimport Container from '../ui/Container';\nimport Heading from '../ui/Heading';\nimport Timeline from '../ui/Timeline';\nimport KpiMetric from '../ui/KpiMetric';\nimport CodeBlock from '../ui/CodeBlock';\nimport { theme } from '../../styles/theme';\n\ninterface ExperienceProps {\n  experience: WorkExperience[];\n}\n\nconst ExperienceWrapper = styled(Section)`\n  min-height: 100vh;\n  background: linear-gradient(180deg, ${theme.colors.backgroundAlt} 0%, ${theme.colors.background} 100%);\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ExperienceContainer = styled(Container)`\n  position: relative;\n  z-index: 1;\n`;\n\nconst ExperienceContent = styled.div`\n  display: flex;\n  margin-top: ${theme.spacing.xl};\n  \n  @media (max-width: ${theme.breakpoints.md}) {\n    flex-direction: column;\n  }\n`;\n\nconst TimelineContainer = styled.div`\n  flex: 0 0 300px;\n  \n  @media (max-width: ${theme.breakpoints.md}) {\n    flex: 1;\n    margin-bottom: ${theme.spacing.xl};\n  }\n`;\n\nconst DetailContainer = styled.div`\n  flex: 1;\n`;\n\nconst JobHeader = styled.div`\n  margin-bottom: ${theme.spacing.xl};\n  border-bottom: 1px solid ${theme.colors.glassBorder};\n  padding-bottom: ${theme.spacing.md};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst JobTitle = styled.h3`\n  font-size: ${theme.typography.sizes.title1};\n  margin-bottom: ${theme.spacing.sm};\n  background: ${theme.colors.gradientPrimary};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n`;\n\nconst JobDetails = styled.div`\n  font-size: ${theme.typography.sizes.body};\n  color: ${theme.colors.textSecondary};\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.md};\n`;\n\nconst JobPeriod = styled.span`\n  background: rgba(255, 255, 255, 0.1);\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-family: 'Fira Code', monospace;\n  font-size: ${theme.typography.sizes.caption};\n`;\n\nconst JobLocation = styled.span`\n  display: flex;\n  align-items: center;\n  \n  &::before {\n    content: '';\n    display: inline-block;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: ${theme.colors.secondary};\n    margin-right: ${theme.spacing.xs};\n  }\n`;\n\nconst KpiMetricsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: ${theme.spacing.lg};\n  margin-top: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.xl};\n`;\n\nconst TechnologiesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${theme.spacing.sm};\n  margin-top: ${theme.spacing.xl};\n`;\n\nconst Technology = styled.span`\n  background: ${theme.colors.glass};\n  border: 1px solid ${theme.colors.glassBorder};\n  padding: ${theme.spacing.xs} ${theme.spacing.sm};\n  border-radius: ${theme.borderRadius.sm};\n  font-size: ${theme.typography.sizes.caption};\n  color: ${theme.colors.textSecondary};\n  backdrop-filter: blur(5px);\n  \n  &::before {\n    content: '#';\n    color: ${theme.colors.primary};\n    margin-right: 2px;\n  }\n`;\n\nconst ResponsibilitiesHeader = styled.h4`\n  font-size: ${theme.typography.sizes.title3};\n  margin-top: ${theme.spacing.xl};\n  margin-bottom: ${theme.spacing.md};\n  color: ${theme.colors.textSecondary};\n  display: flex;\n  align-items: center;\n  \n  &::before {\n    content: '//';\n    color: ${theme.colors.secondary};\n    margin-right: ${theme.spacing.sm};\n    font-family: 'Fira Code', monospace;\n  }\n`;\n\n// Fixed achievement code - using TypeScript as it's more professional\nconst generateAchievementCode = (achievement: string) => {\n  return `/**\n * Key Achievement \n */\ninterface Impact {\n  businessValue: string;\n  userSatisfaction: string;\n  teamEfficiency: string;\n}\n\nclass Achievement {\n  private readonly _impact: string;\n  private readonly _date: Date;\n  private _metrics?: Impact;\n\n  constructor(impact: string) {\n    this._impact = impact;\n    this._date = new Date();\n  }\n\n  public calculateMetrics(): Impact {\n    // Analysis shows significant improvements\n    return {\n      businessValue: 'High',\n      userSatisfaction: '95%',\n      teamEfficiency: 'Increased by 40%'\n    };\n  }\n\n  public logAchievement(): void {\n    console.log(\\`Achievement unlocked: \\${this._impact}\\`);\n  }\n}\n\n// Document the achievement\nconst keyResult = new Achievement(\\`${achievement}\\`);\nkeyResult.logAchievement();`;\n};\n\nconst Experience: React.FC<ExperienceProps> = ({ experience }: ExperienceProps) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [selectedJob, setSelectedJob] = useState<WorkExperience>(experience[0]);\n  \n  useEffect(() => {\n    setSelectedJob(experience[activeIndex]);\n  }, [activeIndex, experience]);\n  \n  // Map achievement to KPI metrics with fixed icons and colors\n  const getKpiMetricsFromAchievements = (job: WorkExperience) => {\n    if (!job.achievements || job.achievements.length === 0) return [];\n    \n    // Define fixed KPI metrics with consistent naming and coloring\n    const kpiData = job.achievements.map((achievement, index) => {\n      const text = achievement.toLowerCase();\n      \n      // Fixed KPI metric configurations\n      const metricTypes = [\n        {\n          icon: 'clock',\n          label: 'Time Reduction',\n          accentColor: theme.colors.primary\n        },\n        {\n          icon: 'users',\n          label: 'User Growth',\n          accentColor: theme.colors.secondary\n        },\n        {\n          icon: 'chart',\n          label: 'Efficiency Increase',\n          accentColor: theme.colors.tertiary\n        }\n      ];\n      \n      // Determine value from achievement text\n      let value = '40%';\n      if (text.includes('400%')) value = '400%';\n      else if (text.includes('35%')) value = '35%';\n      else if (text.includes('92%')) value = '92%';\n      else if (text.includes('65%')) value = '65%';\n      else if (text.includes('15K')) value = '15K';\n      else if (text.includes('25%')) value = '25%';\n      \n      // Use fixed metric type based on index (ensures consistency)\n      const metricType = metricTypes[index % metricTypes.length];\n      \n      return {\n        value,\n        label: metricType.label,\n        icon: metricType.icon,\n        accentColor: metricType.accentColor\n      };\n    });\n    \n    return kpiData.slice(0, 3); // Limit to 3 metrics for consistent display\n  };\n  \n  // Get the most impressive achievement for code display\n  const getKeyAchievement = (job: WorkExperience) => {\n    if (!job.achievements || job.achievements.length === 0) return '';\n    \n    // Simple heuristic - get achievement with most impressive numbers\n    const achievement = job.achievements.find(a => \n      a.includes('400') || a.includes('40%') || a.includes('15K')\n    ) || job.achievements[0];\n    \n    return achievement;\n  };\n  \n  const kpiMetrics = getKpiMetricsFromAchievements(selectedJob);\n  const keyAchievement = getKeyAchievement(selectedJob);\n  const achievementCode = generateAchievementCode(keyAchievement);\n  \n  return (\n    <ExperienceWrapper id=\"experience\" aiPattern>\n      <ExperienceContainer>\n        <Heading \n          level={2} \n          size=\"headline\" \n          align=\"center\" \n          marginBottom=\"large\"\n          gradient\n          withAccent\n        >\n          Professional Journey\n        </Heading>\n        \n        <ExperienceContent>\n          <TimelineContainer>\n            <Timeline \n              items={experience} \n              activeIndex={activeIndex} \n              setActiveIndex={setActiveIndex} \n            />\n          </TimelineContainer>\n          \n          <DetailContainer>\n            <JobHeader>\n              <JobTitle>{selectedJob.title}</JobTitle>\n              <JobDetails>\n                <span>{selectedJob.company}</span>\n                <JobLocation>{selectedJob.location}</JobLocation>\n                <JobPeriod>{selectedJob.period}</JobPeriod>\n              </JobDetails>\n            </JobHeader>\n            \n            {kpiMetrics.length > 0 && (\n              <>\n                <ResponsibilitiesHeader>Key Performance Indicators</ResponsibilitiesHeader>\n                <KpiMetricsContainer>\n                  {kpiMetrics.map((metric, index) => (\n                    <KpiMetric \n                      key={index}\n                      value={metric.value}\n                      label={metric.label}\n                      icon={metric.icon}\n                      accentColor={metric.accentColor}\n                      delay={0} // No delay for stability\n                    />\n                  ))}\n                </KpiMetricsContainer>\n              </>\n            )}\n            \n            <ResponsibilitiesHeader>Achievement Spotlight</ResponsibilitiesHeader>\n            <CodeBlock \n              code={achievementCode}\n              language=\"typescript\"\n              title=\"achievement.ts\"\n              autoType={false} // Disable auto-typing for stability\n            />\n            \n            {selectedJob.technologies && selectedJob.technologies.length > 0 && (\n              <>\n                <ResponsibilitiesHeader>Technologies Used</ResponsibilitiesHeader>\n                <TechnologiesList>\n                  {selectedJob.technologies.map((tech, index) => (\n                    <Technology key={index}>{tech}</Technology>\n                  ))}\n                </TechnologiesList>\n              </>\n            )}\n          </DetailContainer>\n        </ExperienceContent>\n      </ExperienceContainer>\n    </ExperienceWrapper>\n  );\n};\n\nexport default Experience; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}